pipeline {
    agent any
    environment {
        DOCKER_IMAGE = 'your-dockerhub-username/messaging_app:latest'
        DOCKER_CREDENTIALS_ID = 'docker-hub-credentials'
    }
    stages {
        stage('Clone Repository') {
            steps {
                git branch: 'main', 
                    url: 'https://github.com/your-username/alx-backend-python.git', 
                    credentialsId: 'github-credentials'
            }
        }
        stage('Set Up Python Environment') {
            steps {
                sh 'pip3 install -r messaging_app/requirements.txt'
            }
        }
        stage('Run Tests') {
            steps {
                sh 'pytest messaging_app/tests --junit-xml=report.xml'
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                    docker build -t $DOCKER_IMAGE -f messaging_app/Dockerfile .
                    """
                }
            }
        }
        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    withDockerRegistry(credentialsId: "$DOCKER_CREDENTIALS_ID", url: 'https://index.docker.io/v1/') {
                        sh "docker push $DOCKER_IMAGE"
                    }
                }
            }
        }
    }
    post {
        always {
            archiveArtifacts artifacts: 'report.xml', fingerprint: true
        }
        success {
            echo 'Pipeline completed successfully.'
        }
        failure {
            echo 'Pipeline failed. Check logs for details.'
        }
    }
}
